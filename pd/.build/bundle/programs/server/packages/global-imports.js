/* Imports for global scope */

ECMAScript = Package.ecmascript.ECMAScript;
PublishRelations = Package['cottz:publish-relations'].PublishRelations;
CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;
EasySearch = Package['matteodem:easy-search'].EasySearch;
MongoInternals = Package.mongo.MongoInternals;
Mongo = Package.mongo.Mongo;
ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;
AccountsTemplates = Package['useraccounts:core'].AccountsTemplates;
Email = Package.email.Email;
EmailInternals = Package.email.EmailInternals;
check = Package.check.check;
Match = Package.check.Match;
Random = Package.random.Random;
ReactiveDict = Package['reactive-dict'].ReactiveDict;
Tracker = Package.tracker.Tracker;
Deps = Package.tracker.Deps;
_ = Package.underscore._;
Presence = Package['3stack:presence'].Presence;
presences = Package['3stack:presence'].presences;
FlowRouterHelpers = Package['arillo:flow-router-helpers'].FlowRouterHelpers;
BlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;
DocHead = Package['kadira:dochead'].DocHead;
FlowRouter = Package['kadira:flow-router'].FlowRouter;
FastRender = Package['meteorhacks:fast-render'].FastRender;
Picker = Package['meteorhacks:picker'].Picker;
SubsManager = Package['meteorhacks:subs-manager'].SubsManager;
moment = Package['mquandalle:moment'].moment;
getSlug = Package['ongoworks:speakingurl'].getSlug;
Helpers = Package['raix:handlebar-helpers'].Helpers;
TAPi18next = Package['tap:i18n'].TAPi18next;
TAPi18n = Package['tap:i18n'].TAPi18n;
Blaze = Package.blaze.Blaze;
UI = Package.blaze.UI;
Handlebars = Package.blaze.Handlebars;
ReactiveVar = Package['reactive-var'].ReactiveVar;
Mousetrap = Package['mousetrap:mousetrap'].Mousetrap;
BlazeComponent = Package['peerlibrary:blaze-components'].BlazeComponent;
BlazeComponentDebug = Package['peerlibrary:blaze-components'].BlazeComponentDebug;
Markdown = Package['perak:markdown'].Markdown;
Emoji = Package['seriousm:emoji-continued'].Emoji;
JsonRoutes = Package['simple:json-routes'].JsonRoutes;
Meteor = Package.meteor.Meteor;
global = Package.meteor.global;
meteorEnv = Package.meteor.meteorEnv;
WebApp = Package.webapp.WebApp;
main = Package.webapp.main;
WebAppInternals = Package.webapp.WebAppInternals;
DDP = Package['ddp-client'].DDP;
DDPServer = Package['ddp-server'].DDPServer;
meteorInstall = Package.modules.meteorInstall;
Buffer = Package.modules.Buffer;
process = Package.modules.process;
Symbol = Package['ecmascript-runtime'].Symbol;
Map = Package['ecmascript-runtime'].Map;
Set = Package['ecmascript-runtime'].Set;
meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
Promise = Package.promise.Promise;
Collection2 = Package['aldeed:collection2-core'].Collection2;
FS = Package['cfs:base-package'].FS;
Accounts = Package['accounts-base'].Accounts;
T9n = Package['softwarerero:accounts-t9n'].T9n;
ActiveRoute = Package['zimme:active-route'].ActiveRoute;
HTML = Package.htmljs.HTML;
Autoupdate = Package.autoupdate.Autoupdate;
SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;
MongoObject = Package['aldeed:simple-schema'].MongoObject;

