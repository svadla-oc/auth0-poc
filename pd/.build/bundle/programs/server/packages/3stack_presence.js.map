{"version":3,"sources":["meteor://ðŸ’»app/packages/3stack_presence/packages/3stack_presence.js"],"names":[],"mappingsfile":"/packages/3stack_presence.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                      //\n// packages/3stack:presence/lib/collection.coffee.js                                    //\n//                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////\n                                                                                        //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n              \n\npresences = new Mongo.Collection('presences');\n//////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                      //\n// packages/3stack:presence/lib/heartbeat.coffee.js                                     //\n//                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////\n                                                                                        //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar Heartbeat,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\nHeartbeat = (function() {\n  function Heartbeat(interval) {\n    this.interval = interval;\n    this.tock = __bind(this.tock, this);\n    this.tick = __bind(this.tick, this);\n    this.heartbeat = null;\n    this.action = null;\n    this.started = false;\n  }\n\n  Heartbeat.prototype.start = function(action) {\n    this.action = action;\n    if (this.started) {\n      return;\n    }\n    this.started = true;\n    this._enqueue();\n  };\n\n  Heartbeat.prototype.stop = function() {\n    this.started = false;\n    this.action = null;\n    this._dequeue();\n  };\n\n  Heartbeat.prototype.tick = function() {\n    if (typeof this.action === \"function\") {\n      this.action();\n    }\n  };\n\n  Heartbeat.prototype.tock = function() {\n    if (!this.started) {\n      return;\n    }\n    this._dequeue();\n    this._enqueue();\n  };\n\n  Heartbeat.prototype._dequeue = function() {\n    if (this.heartbeat != null) {\n      Meteor.clearTimeout(this.heartbeat);\n      this.heartbeat = null;\n    }\n  };\n\n  Heartbeat.prototype._enqueue = function() {\n    this.heartbeat = Meteor.setTimeout(this.tick, this.interval);\n  };\n\n  return Heartbeat;\n\n})();\n\nthis.Heartbeat = Heartbeat;\n//////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                      //\n// packages/3stack:presence/lib/server/monitor.coffee.js                                //\n//                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////\n                                                                                        //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ServerMonitor,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\nServerMonitor = (function() {\n  function ServerMonitor() {\n    this.pulse = __bind(this.pulse, this);\n    this.onStartup = __bind(this.onStartup, this);\n    this.serverId = Random.id();\n    this.options = {\n      heartbeat: false,\n      timeout: false,\n      hash: null,\n      salt: \"\"\n    };\n    this.heartbeat = null;\n    this.started = false;\n    Meteor.startup(this.onStartup);\n  }\n\n  ServerMonitor.prototype.configure = function(options) {\n    if (this.started) {\n      throw new Error(\"Must configure Presence on the server before Meteor.startup()\");\n    }\n    _.extend(this.options, options);\n    if (this.options.heartbeat === false) {\n      this.heartbeat = null;\n    } else {\n      if (!this.options.timeout) {\n        this.options.timeout = this.options.heartbeat * 5;\n      }\n      this.heartbeat = new Heartbeat(this.options.heartbeat);\n    }\n  };\n\n  ServerMonitor.prototype.generateSessionKey = function() {\n    return \"\" + this.serverId + \"-\" + (Random.id());\n  };\n\n  ServerMonitor.prototype.onStartup = function() {\n    this.started = true;\n    if (this.heartbeat == null) {\n      presences.remove({});\n    } else {\n      this.serverHeartbeats = new Mongo.Collection('presence.servers');\n      this.serverHeartbeats.insert({\n        _id: this.serverId,\n        lastSeen: new Date()\n      });\n      this.heartbeat.start(this.pulse);\n    }\n  };\n\n  ServerMonitor.prototype.pulse = function() {\n    var serverIds, verify;\n    verify = this.serverHeartbeats.upsert({\n      _id: this.serverId\n    }, {\n      $set: {\n        lastSeen: new Date()\n      }\n    });\n    if (verify.insertedId != null) {\n      console.warn(\"Presence: Server Timeout - Presence lost for current connections\");\n    }\n    this.serverHeartbeats.remove({\n      lastSeen: {\n        $lt: new Date(new Date().getTime() - this.options.timeout)\n      }\n    });\n    serverIds = _.pluck(this.serverHeartbeats.find({}).fetch(), \"_id\");\n    presences.remove({\n      serverId: {\n        $nin: serverIds\n      }\n    });\n    this.heartbeat.tock();\n  };\n\n  ServerMonitor.prototype.hash = function(userId, value) {\n    if (this.options.hash !== null) {\n      return this.options.hash(userId + this.options.salt, value);\n    } else {\n      return value;\n    }\n  };\n\n  return ServerMonitor;\n\n})();\n\nthis.ServerMonitor = ServerMonitor;\n//////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                      //\n// packages/3stack:presence/lib/server/presence.coffee.js                               //\n//                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////\n                                                                                        //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n             \n\nPresence = new ServerMonitor();\n\nMeteor.onConnection(function(connection) {\n  var now;\n  connection.sessionKey = Presence.generateSessionKey();\n  now = new Date();\n  presences.insert({\n    _id: connection.sessionKey,\n    serverId: Presence.serverId,\n    clientAddress: connection.clientAddress,\n    status: 'connecting',\n    connectedAt: now,\n    lastSeen: now,\n    state: {},\n    userId: null\n  });\n  connection.onClose(function() {\n    presences.remove({\n      _id: connection.sessionKey\n    });\n  });\n});\n\nMeteor.publish(null, function() {\n  var hashedToken;\n  presences.update({\n    _id: this.connection.sessionKey,\n    status: 'connecting'\n  }, {\n    $set: {\n      status: 'connected'\n    }\n  });\n  hashedToken = null;\n  if (this.userId != null) {\n    hashedToken = Accounts._getLoginToken(this.connection.id);\n    hashedToken = Presence.hash(this.userId, hashedToken);\n  }\n  presences.update({\n    _id: this.connection.sessionKey\n  }, {\n    $set: {\n      loginToken: hashedToken,\n      userId: this.userId,\n      lastSeen: new Date()\n    }\n  });\n  this.ready();\n});\n\nMeteor.methods({\n  'setPresence': function(state) {\n    check(state, Match.Any);\n    this.unblock();\n    presences.update({\n      _id: this.connection.sessionKey\n    }, {\n      $set: {\n        userId: this.userId,\n        lastSeen: new Date(),\n        state: state,\n        status: 'online'\n      }\n    });\n    return null;\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}