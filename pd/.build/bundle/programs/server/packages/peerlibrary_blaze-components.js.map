{"version":3,"sources":["meteor://ðŸ’»app/packages/peerlibrary_blaze-components/packages/peerlibrary_blaze-components.js"],"names":[],"mappingsfile":"/packages/peerlibrary_blaze-components.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/peerlibrary:blaze-components/lookup.js                                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/* This file backports Blaze lookup.js from Meteor 1.2 so that required                                               // 1\n   Blaze features to support Blaze Components are available also in                                                   // 2\n   older Meteor versions.                                                                                             // 3\n                                                                                                                      // 4\n   TODO: Remove this file eventually.                                                                                 // 5\n */                                                                                                                   // 6\n                                                                                                                      // 7\n// Check if we are not running Meteor 1.2+.                                                                           // 8\nif (! Blaze._getTemplate) {                                                                                           // 9\n  // If `x` is a function, binds the value of `this` for that function                                                // 10\n  // to the current data context.                                                                                     // 11\n  var bindDataContext = function (x) {                                                                                // 12\n    if (typeof x === 'function') {                                                                                    // 13\n      return function () {                                                                                            // 14\n        var data = Blaze.getData();                                                                                   // 15\n        if (data == null)                                                                                             // 16\n          data = {};                                                                                                  // 17\n        return x.apply(data, arguments);                                                                              // 18\n      };                                                                                                              // 19\n    }                                                                                                                 // 20\n    return x;                                                                                                         // 21\n  };                                                                                                                  // 22\n                                                                                                                      // 23\n  Blaze._getTemplateHelper = function (template, name, tmplInstanceFunc) {                                            // 24\n    // XXX COMPAT WITH 0.9.3                                                                                          // 25\n    var isKnownOldStyleHelper = false;                                                                                // 26\n                                                                                                                      // 27\n    if (template.__helpers.has(name)) {                                                                               // 28\n      var helper = template.__helpers.get(name);                                                                      // 29\n      if (helper === Blaze._OLDSTYLE_HELPER) {                                                                        // 30\n        isKnownOldStyleHelper = true;                                                                                 // 31\n      } else if (helper != null) {                                                                                    // 32\n        return wrapHelper(bindDataContext(helper), tmplInstanceFunc);                                                 // 33\n      } else {                                                                                                        // 34\n        return null;                                                                                                  // 35\n      }                                                                                                               // 36\n    }                                                                                                                 // 37\n                                                                                                                      // 38\n    // old-style helper                                                                                               // 39\n    if (name in template) {                                                                                           // 40\n      // Only warn once per helper                                                                                    // 41\n      if (!isKnownOldStyleHelper) {                                                                                   // 42\n        template.__helpers.set(name, Blaze._OLDSTYLE_HELPER);                                                         // 43\n        if (!template._NOWARN_OLDSTYLE_HELPERS) {                                                                     // 44\n          Blaze._warn('Assigning helper with `' + template.viewName + '.' +                                           // 45\n            name + ' = ...` is deprecated.  Use `' + template.viewName +                                              // 46\n            '.helpers(...)` instead.');                                                                               // 47\n        }                                                                                                             // 48\n      }                                                                                                               // 49\n      if (template[name] != null) {                                                                                   // 50\n        return wrapHelper(bindDataContext(template[name]), tmplInstanceFunc);                                         // 51\n      }                                                                                                               // 52\n    }                                                                                                                 // 53\n                                                                                                                      // 54\n    return null;                                                                                                      // 55\n  };                                                                                                                  // 56\n                                                                                                                      // 57\n  var wrapHelper = function (f, templateFunc) {                                                                       // 58\n    // XXX COMPAT WITH METEOR 1.0.3.2                                                                                 // 59\n    if (!Blaze.Template._withTemplateInstanceFunc) {                                                                  // 60\n      return Blaze._wrapCatchingExceptions(f, 'template helper');                                                     // 61\n    }                                                                                                                 // 62\n                                                                                                                      // 63\n    if (typeof f !== \"function\") {                                                                                    // 64\n      return f;                                                                                                       // 65\n    }                                                                                                                 // 66\n                                                                                                                      // 67\n    return function () {                                                                                              // 68\n      var self = this;                                                                                                // 69\n      var args = arguments;                                                                                           // 70\n                                                                                                                      // 71\n      return Blaze.Template._withTemplateInstanceFunc(templateFunc, function () {                                     // 72\n        return Blaze._wrapCatchingExceptions(f, 'template helper').apply(self, args);                                 // 73\n      });                                                                                                             // 74\n    };                                                                                                                // 75\n  };                                                                                                                  // 76\n                                                                                                                      // 77\n  // templateInstance argument is provided to be available for possible                                               // 78\n  // alternative implementations of this function by 3rd party packages.                                              // 79\n  Blaze._getTemplate = function (name, templateInstance) {                                                            // 80\n    if ((name in Blaze.Template) && (Blaze.Template[name] instanceof Blaze.Template)) {                               // 81\n      return Blaze.Template[name];                                                                                    // 82\n    }                                                                                                                 // 83\n    return null;                                                                                                      // 84\n  };                                                                                                                  // 85\n                                                                                                                      // 86\n  Blaze._getGlobalHelper = function (name, templateInstance) {                                                        // 87\n    if (Blaze._globalHelpers[name] != null) {                                                                         // 88\n      return wrapHelper(bindDataContext(Blaze._globalHelpers[name]), templateInstance);                               // 89\n    }                                                                                                                 // 90\n    return null;                                                                                                      // 91\n  };                                                                                                                  // 92\n                                                                                                                      // 93\n  Blaze.View.prototype.lookup = function (name, _options) {                                                           // 94\n    var template = this.template;                                                                                     // 95\n    var lookupTemplate = _options && _options.template;                                                               // 96\n    var helper;                                                                                                       // 97\n    var binding;                                                                                                      // 98\n    var boundTmplInstance;                                                                                            // 99\n    var foundTemplate;                                                                                                // 100\n                                                                                                                      // 101\n    if (this.templateInstance) {                                                                                      // 102\n      boundTmplInstance = _.bind(this.templateInstance, this);                                                        // 103\n    }                                                                                                                 // 104\n                                                                                                                      // 105\n    // 0. looking up the parent data context with the special \"../\" syntax                                            // 106\n    if (/^\\./.test(name)) {                                                                                           // 107\n      // starts with a dot. must be a series of dots which maps to an                                                 // 108\n      // ancestor of the appropriate height.                                                                          // 109\n      if (!/^(\\.)+$/.test(name))                                                                                      // 110\n        throw new Error(\"id starting with dot must be a series of dots\");                                             // 111\n                                                                                                                      // 112\n      return Blaze._parentData(name.length - 1, true /*_functionWrapped*/);                                           // 113\n                                                                                                                      // 114\n    }                                                                                                                 // 115\n                                                                                                                      // 116\n    // 1. look up a helper on the current template                                                                    // 117\n    if (template && ((helper = Blaze._getTemplateHelper(template, name, boundTmplInstance)) != null)) {               // 118\n      return helper;                                                                                                  // 119\n    }                                                                                                                 // 120\n                                                                                                                      // 121\n    // 2. look up a binding by traversing the lexical view hierarchy inside the                                       // 122\n    // current template                                                                                               // 123\n    /*if (template && (binding = Blaze._lexicalBindingLookup(Blaze.currentView, name)) != null) {                     // 124\n      return binding;                                                                                                 // 125\n    }*/                                                                                                               // 126\n                                                                                                                      // 127\n    // 3. look up a template by name                                                                                  // 128\n    if (lookupTemplate && ((foundTemplate = Blaze._getTemplate(name, boundTmplInstance)) != null)) {                  // 129\n      return foundTemplate;                                                                                           // 130\n    }                                                                                                                 // 131\n                                                                                                                      // 132\n    // 4. look up a global helper                                                                                     // 133\n    if ((helper = Blaze._getGlobalHelper(name, boundTmplInstance)) != null) {                                         // 134\n      return helper;                                                                                                  // 135\n    }                                                                                                                 // 136\n                                                                                                                      // 137\n    // 5. look up in a data context                                                                                   // 138\n    return function () {                                                                                              // 139\n      var isCalledAsFunction = (arguments.length > 0);                                                                // 140\n      var data = Blaze.getData();                                                                                     // 141\n      var x = data && data[name];                                                                                     // 142\n      if (!x) {                                                                                                       // 143\n        if (lookupTemplate) {                                                                                         // 144\n          throw new Error(\"No such template: \" + name);                                                               // 145\n        } else if (isCalledAsFunction) {                                                                              // 146\n          throw new Error(\"No such function: \" + name);                                                               // 147\n        } /*else if (name.charAt(0) === '@' && ((x === null) ||                                                       // 148\n          (x === undefined))) {                                                                                       // 149\n          // Throw an error if the user tries to use a `@directive`                                                   // 150\n          // that doesn't exist.  We don't implement all directives                                                   // 151\n          // from Handlebars, so there's a potential for confusion                                                    // 152\n          // if we fail silently.  On the other hand, we want to                                                      // 153\n          // throw late in case some app or package wants to provide                                                  // 154\n          // a missing directive.                                                                                     // 155\n          throw new Error(\"Unsupported directive: \" + name);                                                          // 156\n        }*/                                                                                                           // 157\n      }                                                                                                               // 158\n      if (!data) {                                                                                                    // 159\n        return null;                                                                                                  // 160\n      }                                                                                                               // 161\n      if (typeof x !== 'function') {                                                                                  // 162\n        if (isCalledAsFunction) {                                                                                     // 163\n          throw new Error(\"Can't call non-function: \" + x);                                                           // 164\n        }                                                                                                             // 165\n        return x;                                                                                                     // 166\n      }                                                                                                               // 167\n      return x.apply(data, arguments);                                                                                // 168\n    };                                                                                                                // 169\n  };                                                                                                                  // 170\n}                                                                                                                     // 171\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/peerlibrary:blaze-components/lib.coffee.js                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ComponentsNamespaceReference, REQUIRE_RENDERED_INSTANCE, SUPPORTS_REACTIVE_INSTANCE, addEvents, bindComponent, bindDataContext, callTemplateBaseHooks, getTemplateBase, getTemplateInstance, getTemplateInstanceFunction, method, methodName, originalDot, originalGetTemplate, originalInclude, registerFirstCreatedHook, registerHooks, templateInstanceToComponent, withTemplateInstanceFunc, wrapHelper, _fn, _ref,                \n  __slice = [].slice,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\ngetTemplateInstance = function(view) {\n  while (view && !view._templateInstance) {\n    view = view.parentView;\n  }\n  return view != null ? view._templateInstance : void 0;\n};\n\ntemplateInstanceToComponent = function(templateInstanceFunc) {\n  var templateInstance;\n  templateInstance = typeof templateInstanceFunc === \"function\" ? templateInstanceFunc() : void 0;\n  templateInstance = getTemplateInstance(templateInstance != null ? templateInstance.view : void 0);\n  while (templateInstance) {\n    if ('component' in templateInstance) {\n      return templateInstance.component;\n    }\n    templateInstance = getTemplateInstance(templateInstance.view.parentView);\n  }\n  return null;\n};\n\ngetTemplateInstanceFunction = function(view) {\n  var templateInstance;\n  templateInstance = getTemplateInstance(view);\n  return function() {\n    return templateInstance;\n  };\n};\n\nComponentsNamespaceReference = (function() {\n  function ComponentsNamespaceReference(namespace, templateInstance) {\n    this.namespace = namespace;\n    this.templateInstance = templateInstance;\n  }\n\n  return ComponentsNamespaceReference;\n\n})();\n\noriginalDot = Spacebars.dot;\n\nSpacebars.dot = function() {\n  var args, value;\n  value = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n  if (value instanceof ComponentsNamespaceReference) {\n    return Blaze._getTemplate(\"\" + value.namespace + \".\" + (args.join('.')), value.templateInstance);\n  }\n  return originalDot.apply(null, [value].concat(__slice.call(args)));\n};\n\noriginalInclude = Spacebars.include;\n\nSpacebars.include = function() {\n  var args, templateOrFunction;\n  templateOrFunction = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n  if (templateOrFunction instanceof ComponentsNamespaceReference) {\n    templateOrFunction = Blaze._getTemplate(templateOrFunction.namespace, templateOrFunction.templateInstance);\n  }\n  return originalInclude.apply(null, [templateOrFunction].concat(__slice.call(args)));\n};\n\nBlaze._getTemplateHelper = function(template, name, templateInstance) {\n  var component, helper, isKnownOldStyleHelper, mixinOrComponent, _ref, _ref1, _ref2;\n  isKnownOldStyleHelper = false;\n  if (template.__helpers.has(name)) {\n    helper = template.__helpers.get(name);\n    if (helper === Blaze._OLDSTYLE_HELPER) {\n      isKnownOldStyleHelper = true;\n    } else if (helper != null) {\n      return wrapHelper(bindDataContext(helper), templateInstance);\n    } else {\n      return null;\n    }\n  }\n  if (name in template) {\n    if (!isKnownOldStyleHelper) {\n      template.__helpers.set(name, Blaze._OLDSTYLE_HELPER);\n      if (!template._NOWARN_OLDSTYLE_HELPERS) {\n        Blaze._warn(\"Assigning helper with `\" + template.viewName + \".\" + name + \" = ...` is deprecated.  Use `\" + template.viewName + \".helpers(...)` instead.\");\n      }\n    }\n    if (template[name] != null) {\n      return wrapHelper(bindDataContext(template[name]), templateInstance);\n    } else {\n      return null;\n    }\n  }\n  if (!templateInstance) {\n    return null;\n  }\n  if ((_ref = template.viewName) === 'Template.__dynamicWithDataContext' || _ref === 'Template.__dynamic') {\n    return null;\n  }\n  component = Tracker.nonreactive(function() {\n    return templateInstanceToComponent(templateInstance);\n  });\n  if (component) {\n    if (mixinOrComponent = component.getFirstWith(null, name)) {\n      return wrapHelper(bindComponent(mixinOrComponent, mixinOrComponent[name]), templateInstance);\n    }\n  }\n  if (name && name in BlazeComponent.components) {\n    return new ComponentsNamespaceReference(name, templateInstance);\n  }\n  if (component) {\n    if ((helper = (_ref1 = component._componentInternals) != null ? (_ref2 = _ref1.templateBase) != null ? _ref2.__helpers.get(name) : void 0 : void 0) != null) {\n      return wrapHelper(bindDataContext(helper), templateInstance);\n    }\n  }\n  return null;\n};\n\nbindComponent = function(component, helper) {\n  if (_.isFunction(helper)) {\n    return _.bind(helper, component);\n  } else {\n    return helper;\n  }\n};\n\nbindDataContext = function(helper) {\n  if (_.isFunction(helper)) {\n    return function() {\n      var data;\n      data = Blaze.getData();\n      if (data == null) {\n        data = {};\n      }\n      return helper.apply(data, arguments);\n    };\n  } else {\n    return helper;\n  }\n};\n\nwrapHelper = function(f, templateFunc) {\n  if (!Blaze.Template._withTemplateInstanceFunc) {\n    return Blaze._wrapCatchingExceptions(f, 'template helper');\n  }\n  if (!_.isFunction(f)) {\n    return f;\n  }\n  return function() {\n    var args, self;\n    self = this;\n    args = arguments;\n    return Blaze.Template._withTemplateInstanceFunc(templateFunc, function() {\n      return Blaze._wrapCatchingExceptions(f, 'template helper').apply(self, args);\n    });\n  };\n};\n\nif (Blaze.Template._withTemplateInstanceFunc) {\n  withTemplateInstanceFunc = Blaze.Template._withTemplateInstanceFunc;\n} else {\n  withTemplateInstanceFunc = function(templateInstance, f) {\n    return f();\n  };\n}\n\ngetTemplateBase = function(component) {\n  return Tracker.nonreactive(function() {\n    var componentTemplate, templateBase;\n    componentTemplate = component.template();\n    if (_.isString(componentTemplate)) {\n      templateBase = Template[componentTemplate];\n      if (!templateBase) {\n        throw new Error(\"Template '\" + componentTemplate + \"' cannot be found.\");\n      }\n    } else if (componentTemplate) {\n      templateBase = componentTemplate;\n    } else {\n      throw new Error(\"Template for the component '\" + (component.componentName() || 'unnamed') + \"' not provided.\");\n    }\n    return templateBase;\n  });\n};\n\ncallTemplateBaseHooks = function(component, hookName) {\n  var callbacks, templateInstance;\n  if (component._componentInternals == null) {\n    component._componentInternals = {};\n  }\n  if (!component._componentInternals.templateInstance) {\n    return;\n  }\n  templateInstance = Tracker.nonreactive(function() {\n    return component._componentInternals.templateInstance();\n  });\n  callbacks = component._componentInternals.templateBase._getCallbacks(hookName);\n  Template._withTemplateInstanceFunc(function() {\n    return templateInstance;\n  }, function() {\n    var callback, _i, _len, _results;\n    _results = [];\n    for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n      callback = callbacks[_i];\n      _results.push(callback.call(templateInstance));\n    }\n    return _results;\n  });\n};\n\naddEvents = function(view, component) {\n  var eventMap, events, eventsList, handler, spec, _fn, _i, _len;\n  eventsList = component.events();\n  if (!_.isArray(eventsList)) {\n    throw new Error(\"'events' method from the component '\" + (component.componentName() || 'unnamed') + \"' did not return a list of event maps.\");\n  }\n  for (_i = 0, _len = eventsList.length; _i < _len; _i++) {\n    events = eventsList[_i];\n    eventMap = {};\n    _fn = function(spec, handler) {\n      return eventMap[spec] = function() {\n        var args, currentView, event, templateInstance;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        event = args[0];\n        currentView = Blaze.getView(event.currentTarget);\n        templateInstance = getTemplateInstanceFunction(currentView);\n        withTemplateInstanceFunc(templateInstance, function() {\n          return Blaze._withCurrentView(currentView, function() {\n            return handler.apply(component, args);\n          });\n        });\n      };\n    };\n    for (spec in events) {\n      handler = events[spec];\n      _fn(spec, handler);\n    }\n    Blaze._addEventMap(view, eventMap, view);\n  }\n};\n\noriginalGetTemplate = Blaze._getTemplate;\n\nBlaze._getTemplate = function(name, templateInstance) {\n  var template;\n  template = Tracker.nonreactive(function() {\n    var parentComponent, _ref;\n    parentComponent = templateInstanceToComponent(templateInstance);\n    return (_ref = BlazeComponent.getComponent(name)) != null ? _ref.renderComponent(parentComponent) : void 0;\n  });\n  if (template && (template instanceof Blaze.Template || _.isFunction(template))) {\n    return template;\n  }\n  return originalGetTemplate(name);\n};\n\nregisterHooks = function(template, hooks) {\n  if (template.onCreated) {\n    template.onCreated(hooks.onCreated);\n    template.onRendered(hooks.onRendered);\n    return template.onDestroyed(hooks.onDestroyed);\n  } else {\n    template.created = hooks.onCreated;\n    template.rendered = hooks.onRendered;\n    return template.destroyed = hooks.onDestroyed;\n  }\n};\n\nregisterFirstCreatedHook = function(template, onCreated) {\n  var oldCreated;\n  if (template._callbacks) {\n    return template._callbacks.created.unshift(onCreated);\n  } else {\n    oldCreated = template.created;\n    return template.created = function() {\n      onCreated.call(this);\n      return oldCreated != null ? oldCreated.call(this) : void 0;\n    };\n  }\n};\n\nBlazeComponent = (function(_super) {\n  __extends(BlazeComponent, _super);\n\n  function BlazeComponent() {\n    return BlazeComponent.__super__.constructor.apply(this, arguments);\n  }\n\n  BlazeComponent.getComponentForElement = function(domElement) {\n    if (!domElement) {\n      return null;\n    }\n    if (domElement.nodeType !== Node.ELEMENT_NODE) {\n      throw new Error(\"Expected DOM element.\");\n    }\n    return templateInstanceToComponent((function(_this) {\n      return function() {\n        return getTemplateInstance(Blaze.getView(domElement));\n      };\n    })(this));\n  };\n\n  BlazeComponent.prototype.mixins = function() {\n    return [];\n  };\n\n  BlazeComponent.prototype.mixinParent = function(mixinParent) {\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if (mixinParent) {\n      this._componentInternals.mixinParent = mixinParent;\n      return this;\n    }\n    return this._componentInternals.mixinParent || null;\n  };\n\n  BlazeComponent.prototype.requireMixin = function(nameOrMixin) {\n    var _ref;\n    assert((_ref = this._componentInternals) != null ? _ref.mixins : void 0);\n    Tracker.nonreactive((function(_this) {\n      return function() {\n        var mixinInstance, mixinInstanceComponent, _base, _ref1, _ref2, _ref3;\n        if (_this.getMixin(nameOrMixin)) {\n          return;\n        }\n        if (_.isString(nameOrMixin)) {\n          if (_this.constructor.getComponent) {\n            mixinInstanceComponent = _this.constructor.getComponent(nameOrMixin);\n          } else {\n            mixinInstanceComponent = BlazeComponent.getComponent(nameOrMixin);\n          }\n          if (!mixinInstanceComponent) {\n            throw new Error(\"Unknown mixin '\" + nameOrMixin + \"'.\");\n          }\n          mixinInstance = new mixinInstanceComponent();\n        } else if (_.isFunction(nameOrMixin)) {\n          mixinInstance = new nameOrMixin();\n        } else {\n          mixinInstance = nameOrMixin;\n        }\n        _this._componentInternals.mixins.push(mixinInstance);\n        if (mixinInstance.mixinParent) {\n          mixinInstance.mixinParent(_this);\n        }\n        if (typeof mixinInstance.createMixins === \"function\") {\n          mixinInstance.createMixins();\n        }\n        if ((_base = _this._componentInternals).templateInstance == null) {\n          _base.templateInstance = new ReactiveField(null, function(a, b) {\n            return a === b;\n          });\n        }\n        if (!((_ref1 = _this._componentInternals.templateInstance()) != null ? _ref1.view.isDestroyed : void 0)) {\n          if (!_this._componentInternals.inOnCreated && ((_ref2 = _this._componentInternals.templateInstance()) != null ? _ref2.view.isCreated : void 0)) {\n            if (typeof mixinInstance.onCreated === \"function\") {\n              mixinInstance.onCreated();\n            }\n          }\n          if (!_this._componentInternals.inOnRendered && ((_ref3 = _this._componentInternals.templateInstance()) != null ? _ref3.view.isRendered : void 0)) {\n            return typeof mixinInstance.onRendered === \"function\" ? mixinInstance.onRendered() : void 0;\n          }\n        }\n      };\n    })(this));\n    return this;\n  };\n\n  BlazeComponent.prototype.createMixins = function() {\n    var mixin, _i, _len, _ref;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if (this._componentInternals.mixins) {\n      return;\n    }\n    this._componentInternals.mixins = [];\n    _ref = this.mixins();\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      mixin = _ref[_i];\n      this.requireMixin(mixin);\n    }\n    return this;\n  };\n\n  BlazeComponent.prototype.getMixin = function(nameOrMixin) {\n    var mixin, mixinComponentName, _i, _j, _len, _len1, _ref, _ref1, _ref2;\n    assert((_ref = this._componentInternals) != null ? _ref.mixins : void 0);\n    if (_.isString(nameOrMixin)) {\n      _ref1 = this._componentInternals.mixins;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        mixin = _ref1[_i];\n        mixinComponentName = (typeof mixin.componentName === \"function\" ? mixin.componentName() : void 0) || null;\n        if (mixinComponentName && mixinComponentName === nameOrMixin) {\n          return mixin;\n        }\n      }\n    } else {\n      _ref2 = this._componentInternals.mixins;\n      for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {\n        mixin = _ref2[_j];\n        if (mixin.constructor === nameOrMixin) {\n          return mixin;\n        } else if (mixin === nameOrMixin) {\n          return mixin;\n        }\n      }\n    }\n    return null;\n  };\n\n  BlazeComponent.prototype.callFirstWith = function() {\n    var afterComponentOrMixin, args, mixin, propertyName;\n    afterComponentOrMixin = arguments[0], propertyName = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];\n    mixin = this.getFirstWith(afterComponentOrMixin, propertyName);\n    if (!mixin) {\n      return;\n    }\n    if (_.isFunction(mixin[propertyName])) {\n      return mixin[propertyName].apply(mixin, args);\n    } else {\n      return mixin[propertyName];\n    }\n  };\n\n  BlazeComponent.prototype.getFirstWith = function(afterComponentOrMixin, propertyName) {\n    var found, mixin, _i, _len, _ref, _ref1;\n    assert((_ref = this._componentInternals) != null ? _ref.mixins : void 0);\n    if (!afterComponentOrMixin) {\n      if (propertyName in this) {\n        return this;\n      }\n      found = true;\n    } else if (afterComponentOrMixin && afterComponentOrMixin === this) {\n      found = true;\n    } else {\n      found = false;\n    }\n    _ref1 = this._componentInternals.mixins;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      mixin = _ref1[_i];\n      if (found && propertyName in mixin) {\n        return mixin;\n      }\n      if (mixin === afterComponentOrMixin) {\n        found = true;\n      }\n    }\n    return null;\n  };\n\n  BlazeComponent.renderComponent = function(parentComponent) {\n    return Tracker.nonreactive((function(_this) {\n      return function() {\n        var componentClass, data, templateInstance;\n        componentClass = _this;\n        if (Blaze.currentView) {\n          data = Template.currentData();\n        } else {\n          data = null;\n        }\n        if ((data != null ? data.constructor : void 0) !== share.argumentsConstructor) {\n          templateInstance = getTemplateInstanceFunction(Blaze.currentView);\n          return withTemplateInstanceFunc(templateInstance, function() {\n            var component;\n            component = new componentClass();\n            return component.renderComponent(parentComponent);\n          });\n        }\n        return function() {\n          var currentWith, nonreactiveArguments, reactiveArguments;\n          assert(Tracker.active);\n          currentWith = Blaze.getView('with');\n          reactiveArguments = new ComputedField(function() {\n            data = currentWith.dataVar.get();\n            assert.equal(data != null ? data.constructor : void 0, share.argumentsConstructor);\n            return data._arguments;\n          }, EJSON.equals);\n          nonreactiveArguments = reactiveArguments();\n          return Tracker.nonreactive(function() {\n            var template;\n            template = Blaze._withCurrentView(Blaze.currentView.parentView.parentView, (function(_this) {\n              return function() {\n                templateInstance = getTemplateInstanceFunction(Blaze.currentView);\n                return withTemplateInstanceFunc(templateInstance, function() {\n                  var component;\n                  component = (function(func, args, ctor) {\n                    ctor.prototype = func.prototype;\n                    var child = new ctor, result = func.apply(child, args);\n                    return Object(result) === result ? result : child;\n                  })(componentClass, nonreactiveArguments, function(){});\n                  return component.renderComponent(parentComponent);\n                });\n              };\n            })(this));\n            registerFirstCreatedHook(template, function() {\n              this.view.originalParentView = this.view.parentView;\n              return this.view.parentView = this.view.parentView.parentView.parentView;\n            });\n            return template;\n          });\n        };\n      };\n    })(this));\n  };\n\n  BlazeComponent.prototype.renderComponent = function(parentComponent) {\n    return Tracker.nonreactive((function(_this) {\n      return function() {\n        var component, template, templateBase;\n        component = _this;\n        component.createMixins();\n        templateBase = getTemplateBase(component);\n        template = new Blaze.Template(\"BlazeComponent.\" + (component.componentName() || 'unnamed'), templateBase.renderFunction);\n        if (component._componentInternals == null) {\n          component._componentInternals = {};\n        }\n        component._componentInternals.templateBase = templateBase;\n        registerHooks(template, {\n          onCreated: function() {\n            var componentOrMixin, _base, _base1, _base2, _base3, _results;\n            if (parentComponent) {\n              Tracker.nonreactive((function(_this) {\n                return function() {\n                  assert(!component.parentComponent());\n                  component.parentComponent(parentComponent);\n                  return parentComponent.addChildComponent(component);\n                };\n              })(this));\n            }\n            this.view._onViewRendered((function(_this) {\n              return function() {\n                var componentOrMixin, _results;\n                if (_this.view.renderCount !== 1) {\n                  return;\n                }\n                componentOrMixin = null;\n                _results = [];\n                while (componentOrMixin = _this.component.getFirstWith(componentOrMixin, 'events')) {\n                  _results.push(addEvents(_this.view, componentOrMixin));\n                }\n                return _results;\n              };\n            })(this));\n            this.component = component;\n            assert(!Tracker.nonreactive((function(_this) {\n              return function() {\n                var _base;\n                return typeof (_base = _this.component._componentInternals).templateInstance === \"function\" ? _base.templateInstance() : void 0;\n              };\n            })(this)));\n            if ((_base = this.component._componentInternals).templateInstance == null) {\n              _base.templateInstance = new ReactiveField(this, function(a, b) {\n                return a === b;\n              });\n            }\n            this.component._componentInternals.templateInstance(this);\n            if ((_base1 = this.component._componentInternals).isCreated == null) {\n              _base1.isCreated = new ReactiveField(true);\n            }\n            this.component._componentInternals.isCreated(true);\n            if ((_base2 = this.component._componentInternals).isRendered == null) {\n              _base2.isRendered = new ReactiveField(false);\n            }\n            this.component._componentInternals.isRendered(false);\n            if ((_base3 = this.component._componentInternals).isDestroyed == null) {\n              _base3.isDestroyed = new ReactiveField(false);\n            }\n            this.component._componentInternals.isDestroyed(false);\n            try {\n              this.component._componentInternals.inOnCreated = true;\n              componentOrMixin = null;\n              _results = [];\n              while (componentOrMixin = this.component.getFirstWith(componentOrMixin, 'onCreated')) {\n                _results.push(componentOrMixin.onCreated());\n              }\n              return _results;\n            } finally {\n              delete this.component._componentInternals.inOnCreated;\n            }\n          },\n          onRendered: function() {\n            var componentOrMixin, _base, _results;\n            if ((_base = this.component._componentInternals).isRendered == null) {\n              _base.isRendered = new ReactiveField(true);\n            }\n            this.component._componentInternals.isRendered(true);\n            Tracker.nonreactive((function(_this) {\n              return function() {\n                return assert.equal(_this.component._componentInternals.isCreated(), true);\n              };\n            })(this));\n            try {\n              this.component._componentInternals.inOnRendered = true;\n              componentOrMixin = null;\n              _results = [];\n              while (componentOrMixin = this.component.getFirstWith(componentOrMixin, 'onRendered')) {\n                _results.push(componentOrMixin.onRendered());\n              }\n              return _results;\n            } finally {\n              delete this.component._componentInternals.inOnRendered;\n            }\n          },\n          onDestroyed: function() {\n            return this.autorun((function(_this) {\n              return function(computation) {\n                if (_this.component.childComponents().length) {\n                  return;\n                }\n                computation.stop();\n                return Tracker.nonreactive(function() {\n                  var componentOrMixin, _base, _base1;\n                  assert.equal(_this.component._componentInternals.isCreated(), true);\n                  _this.component._componentInternals.isCreated(false);\n                  if ((_base = _this.component._componentInternals).isRendered == null) {\n                    _base.isRendered = new ReactiveField(false);\n                  }\n                  _this.component._componentInternals.isRendered(false);\n                  if ((_base1 = _this.component._componentInternals).isDestroyed == null) {\n                    _base1.isDestroyed = new ReactiveField(true);\n                  }\n                  _this.component._componentInternals.isDestroyed(true);\n                  componentOrMixin = null;\n                  while (componentOrMixin = _this.component.getFirstWith(componentOrMixin, 'onDestroyed')) {\n                    componentOrMixin.onDestroyed();\n                  }\n                  if (parentComponent) {\n                    component.parentComponent(null);\n                    parentComponent.removeChildComponent(component);\n                  }\n                  return _this.component._componentInternals.templateInstance(null);\n                });\n              };\n            })(this));\n          }\n        });\n        return template;\n      };\n    })(this));\n  };\n\n  BlazeComponent.prototype.removeComponent = function() {\n    if (this.isRendered()) {\n      return Blaze.remove(this._componentInternals.templateInstance().view);\n    }\n  };\n\n  BlazeComponent.prototype.template = function() {\n    return this.callFirstWith(this, 'template') || this.constructor.componentName();\n  };\n\n  BlazeComponent.prototype.onCreated = function() {\n    return callTemplateBaseHooks(this, 'created');\n  };\n\n  BlazeComponent.prototype.onRendered = function() {\n    return callTemplateBaseHooks(this, 'rendered');\n  };\n\n  BlazeComponent.prototype.onDestroyed = function() {\n    return callTemplateBaseHooks(this, 'destroyed');\n  };\n\n  BlazeComponent.prototype.isCreated = function() {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).isCreated == null) {\n      _base.isCreated = new ReactiveField(false);\n    }\n    return this._componentInternals.isCreated();\n  };\n\n  BlazeComponent.prototype.isRendered = function() {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).isRendered == null) {\n      _base.isRendered = new ReactiveField(false);\n    }\n    return this._componentInternals.isRendered();\n  };\n\n  BlazeComponent.prototype.isDestroyed = function() {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).isDestroyed == null) {\n      _base.isDestroyed = new ReactiveField(false);\n    }\n    return this._componentInternals.isDestroyed();\n  };\n\n  BlazeComponent.prototype.insertDOMElement = function(parent, node, before) {\n    if (before == null) {\n      before = null;\n    }\n    if (parent && node && (node.parentNode !== parent || node.nextSibling !== before)) {\n      parent.insertBefore(node, before);\n    }\n  };\n\n  BlazeComponent.prototype.moveDOMElement = function(parent, node, before) {\n    if (before == null) {\n      before = null;\n    }\n    if (parent && node && (node.parentNode !== parent || node.nextSibling !== before)) {\n      parent.insertBefore(node, before);\n    }\n  };\n\n  BlazeComponent.prototype.removeDOMElement = function(parent, node) {\n    if (parent && node && node.parentNode === parent) {\n      parent.removeChild(node);\n    }\n  };\n\n  BlazeComponent.prototype.events = function() {\n    var eventMap, events, handler, spec, templateInstance, view, _fn, _i, _len, _ref, _results;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if (!this._componentInternals.templateInstance) {\n      return [];\n    }\n    view = Tracker.nonreactive((function(_this) {\n      return function() {\n        return _this._componentInternals.templateInstance().view;\n      };\n    })(this));\n    templateInstance = getTemplateInstanceFunction(view);\n    _ref = this._componentInternals.templateBase.__eventMaps;\n    _results = [];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      events = _ref[_i];\n      eventMap = {};\n      _fn = function(spec, handler) {\n        return eventMap[spec] = function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          return withTemplateInstanceFunc(templateInstance, function() {\n            return Blaze._withCurrentView(view, function() {\n              return handler.apply(view, args);\n            });\n          });\n        };\n      };\n      for (spec in events) {\n        handler = events[spec];\n        _fn(spec, handler);\n      }\n      _results.push(eventMap);\n    }\n    return _results;\n  };\n\n  BlazeComponent.prototype.data = function() {\n    var view, _base, _ref;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).templateInstance == null) {\n      _base.templateInstance = new ReactiveField(null, function(a, b) {\n        return a === b;\n      });\n    }\n    if (view = (_ref = this._componentInternals.templateInstance()) != null ? _ref.view : void 0) {\n      return Blaze.getData(view);\n    }\n    return void 0;\n  };\n\n  BlazeComponent.currentData = function() {\n    if (Blaze.currentView) {\n      return Blaze.getData();\n    }\n    return void 0;\n  };\n\n  BlazeComponent.prototype.currentData = function() {\n    return this.constructor.currentData();\n  };\n\n  BlazeComponent.prototype.component = function() {\n    return this;\n  };\n\n  BlazeComponent.currentComponent = function() {\n    return Tracker.nonreactive((function(_this) {\n      return function() {\n        return templateInstanceToComponent(Template.instance);\n      };\n    })(this));\n  };\n\n  BlazeComponent.prototype.currentComponent = function() {\n    return this.constructor.currentComponent();\n  };\n\n  BlazeComponent.prototype.firstNode = function() {\n    if (this.isRendered()) {\n      return this._componentInternals.templateInstance().view._domrange.firstNode();\n    }\n    return void 0;\n  };\n\n  BlazeComponent.prototype.lastNode = function() {\n    if (this.isRendered()) {\n      return this._componentInternals.templateInstance().view._domrange.lastNode();\n    }\n    return void 0;\n  };\n\n  return BlazeComponent;\n\n})(BaseComponent);\n\nSUPPORTS_REACTIVE_INSTANCE = ['subscriptionsReady'];\n\nREQUIRE_RENDERED_INSTANCE = ['$', 'find', 'findAll'];\n\n_ref = Blaze.TemplateInstance.prototype;\n_fn = function(methodName, method) {\n  if (__indexOf.call(SUPPORTS_REACTIVE_INSTANCE, methodName) >= 0) {\n    return BlazeComponent.prototype[methodName] = function() {\n      var args, templateInstance, _base;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      if (this._componentInternals == null) {\n        this._componentInternals = {};\n      }\n      if ((_base = this._componentInternals).templateInstance == null) {\n        _base.templateInstance = new ReactiveField(null, function(a, b) {\n          return a === b;\n        });\n      }\n      if (templateInstance = this._componentInternals.templateInstance()) {\n        return templateInstance[methodName].apply(templateInstance, args);\n      }\n      return void 0;\n    };\n  } else if (__indexOf.call(REQUIRE_RENDERED_INSTANCE, methodName) >= 0) {\n    return BlazeComponent.prototype[methodName] = function() {\n      var args, _ref1;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      if (this.isRendered()) {\n        return (_ref1 = this._componentInternals.templateInstance())[methodName].apply(_ref1, args);\n      }\n      return void 0;\n    };\n  } else {\n    return BlazeComponent.prototype[methodName] = function() {\n      var args, templateInstance;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      templateInstance = Tracker.nonreactive((function(_this) {\n        return function() {\n          var _ref1;\n          return (_ref1 = _this._componentInternals) != null ? typeof _ref1.templateInstance === \"function\" ? _ref1.templateInstance() : void 0 : void 0;\n        };\n      })(this));\n      if (!templateInstance) {\n        throw new Error(\"The component has to be created before calling '\" + methodName + \"'.\");\n      }\n      return templateInstance[methodName].apply(templateInstance, args);\n    };\n  }\n};\nfor (methodName in _ref) {\n  method = _ref[methodName];\n  _fn(methodName, method);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/peerlibrary:blaze-components/debug.coffee.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar                     \n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nBlazeComponentDebug = (function(_super) {\n  __extends(BlazeComponentDebug, _super);\n\n  function BlazeComponentDebug() {\n    return BlazeComponentDebug.__super__.constructor.apply(this, arguments);\n  }\n\n  BlazeComponentDebug.startComponent = function(component) {\n    BlazeComponentDebug.__super__.constructor.startComponent.apply(this, arguments);\n    return console.log(component.data());\n  };\n\n  BlazeComponentDebug.startMarkedComponent = function(component) {\n    BlazeComponentDebug.__super__.constructor.startMarkedComponent.apply(this, arguments);\n    return console.log(component.data());\n  };\n\n  BlazeComponentDebug.dumpComponentSubtree = function(rootComponentOrElement) {\n    if (rootComponentOrElement.nodeType === Node.ELEMENT_NODE) {\n      rootComponentOrElement = BlazeComponent.getComponentForElement(rootComponentOrElement);\n    }\n    return BlazeComponentDebug.__super__.constructor.dumpComponentSubtree.apply(this, arguments);\n  };\n\n  BlazeComponentDebug.dumpComponentTree = function(rootComponentOrElement) {\n    if (rootComponentOrElement.nodeType === Node.ELEMENT_NODE) {\n      rootComponentOrElement = BlazeComponent.getComponentForElement(rootComponentOrElement);\n    }\n    return BlazeComponentDebug.__super__.constructor.dumpComponentTree.apply(this, arguments);\n  };\n\n  BlazeComponentDebug.dumpAllComponents = function() {\n    var allRootComponents, rootComponent, _i, _len;\n    allRootComponents = [];\n    $('*').each((function(_this) {\n      return function(i, element) {\n        var component, rootComponent;\n        component = BlazeComponent.getComponentForElement(element);\n        if (!component) {\n          return;\n        }\n        rootComponent = _this.componentRoot(component);\n        if (__indexOf.call(allRootComponents, rootComponent) < 0) {\n          return allRootComponents.push(rootComponent);\n        }\n      };\n    })(this));\n    for (_i = 0, _len = allRootComponents.length; _i < _len; _i++) {\n      rootComponent = allRootComponents[_i];\n      this.dumpComponentSubtree(rootComponent);\n    }\n  };\n\n  return BlazeComponentDebug;\n\n})(BaseComponentDebug);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}